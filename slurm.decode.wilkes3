#!/bin/bash
#SBATCH -J decode
#SBATCH -A MLMI-SW984-SL2-GPU
#! How many whole nodes should be allocated?
#SBATCH --nodes=1
#! How many (MPI) tasks will there be in total?
#! Note probably this should not exceed the total number of GPUs in use.
#SBATCH --ntasks=1
#! Specify the number of GPUs per node (between 1 and 4; must be 4 if nodes>1).
#! Note that the job submission script will enforce no more than 32 cpus per GPU.
#SBATCH --gres=gpu:1
#SBATCH --time=02:00:00
#SBATCH -p ampere
#SBATCH --output=slurm_logs/%j.%x_%a.out
#SBATCH --error=slurm_logs/%j.%x_%a.err
#SBATCH --array=0-3

#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel8/default-amp              # REQUIRED - loads the basic environment

# Additional environment setup
module load python/3.8
source .venv/bin/activate

# Start logs
echo -e "JobID: $SLURM_JOB_ID\n======"
echo "Running on master node: `hostname`"
echo "Start time: `date`"

#################################

EXP_DIR="experiments/DGPT-MC-vs-baselines"
NO_REP=5

#################################

SYSTEM_NAMES=(DGPT-norep$NO_REP DGPT-MC-norep$NO_REP GPS Gold-standard)
MODEL_NAMES=(microsoft/DialoGPT-medium models/DialoGPT-finetuned-multiCONAN NA NA)
DECODE_OR_NOT_ARRAY=(false false false false) #(true true false false)

SYSTEM_NAME=${SYSTEM_NAMES[$SLURM_ARRAY_TASK_ID]}
MODEL_NAME=${MODEL_NAMES[$SLURM_ARRAY_TASK_ID]}
SHOULD_DECODE=${DECODE_OR_NOT_ARRAY[$SLURM_ARRAY_TASK_ID]}

OUTPUT_DIR="$EXP_DIR/$SYSTEM_NAME"
if [ $SHOULD_DECODE = true ]; then
    CONFIG_OVERRIDES="no_repeat_ngram_size=$NO_REP"
    python decode.py -m $MODEL_NAME -o $OUTPUT_DIR -co $CONFIG_OVERRIDES
fi

PREDICTIONS_FILE="$OUTPUT_DIR/predictions.txt"
python evaluate.py -p $PREDICTIONS_FILE -v

################################

bash extract-experiment-results.sh $EXP_DIR

# Final logs
echo "Finish time: `date`"
